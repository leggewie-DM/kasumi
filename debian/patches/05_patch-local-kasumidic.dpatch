#! /bin/sh /usr/share/dpatch/dpatch-run
## 04_patch-local-kasumidic.dpatch by Ikuya Awashiro <ikuya@fruitsbasket.info>
##
## All lines beginning with `## DP:' are a description of the patch.
## DP: No description.

@DPATCH@
diff -urNad kasumi-2.2~/KasumiDic.cxx kasumi-2.2/KasumiDic.cxx
--- kasumi-2.2~/KasumiDic.cxx	2006-06-20 23:41:47.000000000 +0900
+++ kasumi-2.2/KasumiDic.cxx	2007-06-02 23:54:15.000000000 +0900
@@ -38,6 +38,7 @@
 #include <sstream>
 #include <string>
 #include <vector>
+#include <cassert>
 
 using namespace std;
 
@@ -72,6 +73,9 @@
   const int FREQ_LBOUND = conf->getPropertyValueByInt("MinFrequency");  
   const int FREQ_UBOUND = conf->getPropertyValueByInt("MaxFrequency");
 
+  int anthy_version = atoi(anthy_get_version_string());
+  assert(anthy_version != 0);
+
   try{
       if(anthy_priv_dic_select_first_entry() == -1){
 	  // no word
@@ -79,7 +83,6 @@
       }
       else if(anthy_priv_dic_select_first_entry() == -3)
       {
-	  int anthy_version = str2int(string(anthy_get_version_string()));
 	  if(anthy_version >= 7716)
 	  {
 	      // do not throw exception in the case that this doesn't fail to
@@ -109,16 +112,14 @@
 	      KasumiWord *newWord = KasumiWord::createNewWord(conf);
 
 	      newWord->setSound(string(sound));
-	      int anthy_version = str2int(string(anthy_get_version_string()));
-	      if(anthy_version >= 7710)
+	      if (anthy_version < 7710 && spelling[0] == ' ') {
+		      // Measures against a defect of anthy.
+		      // "anthy_priv_dic_get_word()" function returns
+		      // a string whose first character is an unwated
+		      // white space.
+		      newWord->setSpelling(string(spelling+1));
+	      } else
 		  newWord->setSpelling(string(spelling));
-	      else
-	      {
-		  // Measures against a defect of anthy.
-		  // "anthy_priv_dic_get_word()" function returns a string
-		  // whose first character is an unwated white space.
-		  newWord->setSpelling(string(spelling+1));
-	      }
 	      newWord->setFrequency(freq);
 	      newWord->setWordType(KasumiWordType::getWordTypeFromCannaTab(string(wt)));
 	      appendWord(newWord);
